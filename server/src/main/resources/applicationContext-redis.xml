<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:cache="http://www.springframework.org/schema/cache" 
	xmlns:redis="http://www.springframework.org/schema/redis"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.0.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
       http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd http://www.springframework.org/schema/util  http://www.springframework.org/schema/util/spring-util-3.0.xsd http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd">

	<!-- <bean id="cacheManager" class="com.huake.cache.impl.MemcachedCacheManager" p:serverAddress="192.168.1.50:12111"/>
	 -->
	<cache:annotation-driven />
	
	<!-- <bean id="jedisPoolConfig"  class="redis.clients.jedis.JedisPoolConfig">  
        <property name="maxActive" value="1024" />  redis2.4以后不兼容这种配置 没有maxActive
        <property name="maxIdle" value="200" />  
        <property name="maxWait" value="1000" />  
        <property name="testOnBorrow" value="true" />  
    </bean>
     -->
     <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <property name="maxTotal" value="${redis.pool.maxTotal}" />
        <property name="maxIdle" value="${redis.pool.maxIdle}" />
        <property name="timeBetweenEvictionRunsMillis" value="${redis.pool.timeBetweenEvictionRunsMillis}" />
        <property name="minEvictableIdleTimeMillis" value="${redis.pool.minEvictableIdleTimeMillis}" />
        <property name="testOnBorrow" value="${redis.pool.testOnBorrow}" />
    </bean>
    <bean id="jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
    	<!-- 生产切换该地址及端口 -->
    	<property name="hostName" value="${redis.pool.host}" />
    	<!-- <property name="hostName" value="127.0.0.1" /> -->
    	<property name="port" value="${redis.pool.port}" />
    	<property name="poolConfig" ref="jedisPoolConfig" />
    </bean>
    
    <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate" p:connection-factory-ref="jedisConnectionFactory" 
          lazy-init="false">
          <!-- 配置valueSerializer  对队列线程的传入对象有影响 -->
    	<property name="keySerializer">
			<bean class="org.springframework.data.redis.serializer.StringRedisSerializer" />
		</property>
		<property name="hashKeySerializer">
			<bean class="org.springframework.data.redis.serializer.StringRedisSerializer" />
		</property>
		<property name="hashValueSerializer">
			<bean class="org.springframework.data.redis.serializer.StringRedisSerializer" />
		</property>
    </bean> 
    
    <bean id="cacheManager" class="org.springframework.data.redis.cache.RedisCacheManager">
    	<constructor-arg ref="redisTemplate"/>  
    	<property name="defaultExpiration" value="86400" />
    </bean>
    
    <bean id="stringRedisSerializer" class="org.springframework.data.redis.serializer.StringRedisSerializer"></bean>
   	<bean id="jdkSerializer" class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer" /> 


    <bean id="cacheBuilder" class="com.huake.saas.redis.RedisCacheBuilder" lazy-init="false">
		<property name="redisCacheManager" ref="cacheManager" /> 
        <property name="lazyTime" value="20" /> 
	</bean>
	
</beans>